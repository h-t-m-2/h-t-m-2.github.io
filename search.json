[{"title":"Hello World","url":"/2021/11/04/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"url":"/2021/11/06/%E5%9C%A8Github%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","content":"[TOC]\n在GitHub上搭建个人博客提前准备\nGitHub账户\nVScode\nGit\nNode.js\n\n工具安装VScode安装：Git安装：\n到Git官网下载Git安装包。\n\n\n\n\n点击Download for Windows，Git官网会直接识别电脑的操作系统并提供对应安装包，这里示范为Windows系统。\n也可以点击左下角Downloads选择其他安装包。\n提供Git-2.33.1-64-bit.exe蓝奏云下载。\n\n\n安装Git\n\n\n下载完成后直接双击打开安装包，这里示范Git v2.33.1。\n\n\n若以前有安装过Git，则这一页会显示Install按钮，点击即可直接按原来的配置直接安装，如果要重新自定义配置，请先将电脑中的Git卸载。\n\n\n\n\n\n\n点击Next进入安装目录选择页面。\n\n\n默认安装在C盘，可以自定义安装在别的地方，这里示范安装在D盘。\n这一步往后**直接点击Next**即可，默认配置就足够了。\n\n\n\n\n\n\n点击Next进入组件选择页面，默认即可。\n\n\n前两行表示是否在桌面创建快捷方式；\n中间默认勾选部分建议不要动；\n倒数第二个表示是否每日检查更新；\n最后一个表示是否将Git命令行添加到Windows终端（可进一步美化）。\n\n\n\n\n\n\n点击Next进入开始菜单设置，默认即可。\n\n\n默认放在开始菜单的Git文件夹，也可修改文件夹名称或选择其他文件夹。\n勾选下面选项则不创建开始菜单文件夹（即无法从开始菜单打开）。\n\n\n\n\n\n\n点击Next进入默认编辑器选择， 默认即可。\n\n\n默认选择Vim，这里示范使用Visual Studio Code作为默认编辑器。\n\n\n\n\n\n\n点击Next进入选择修改初始化分支的名称页面，默认即可。\n\n\n默认选择让Git决定，也可以选择下一项自定义名称，默认修改为main，也可自行修改为自定义名称。\n各大开源社区已渐渐将默认分支名称由master变更为main。\n\n\n\n\n\n\n点击Next进入PATH环境调整页面，默认即可。\n\n\n第一种“仅从Git Bash使用Git”，选择后将不能通过第三方软件使用Git。\n第二种“从命令行以及第三方软件使用Git”，默认选此项。\n第三种“从命令行使用可选的Unix工具和Git”，此项会覆盖Windows工具，请谨慎选择。\n\n\n\n\n\n\n点击Next进入选择ssh可执行文件页面，默认即可。\n\n\n\n\n\n\n点击Next进入选择后台客户端连接协议页面，默认即可。\n\n\n第一个“使用 OpenSSL 库”。服务器证书将使用ca-bundle.crt文件进行验证，一般选这项。\n第二个“使用本地 Windows 安全通道库”。服务器证书将使用Windows证书存储验证，此选项还允许您使用公司的内部根CA证书。\n\n\n\n\n\n\n点击Next进入配置行末换行符页面。默认即可。\n\n\n第一个选项是“签出Windows风格，提交Unix风格的行尾”。签出文本文件时，Git会将LF转换为CRLF。提交文本文件时，CRLF将转换为LF。对于跨平台项目，这是Windows上的推荐设置（“ core.autocrlf”设置为“ true”）。\n第二个选项是“按原样签出，提交Unix样式的行尾”。签出文本文件时，Git不会执行任何转换。 提交文本文件时，CRLF将转换为LF。对于跨平台项目，这是Unix上的建议设置（“ core.autocrlf”设置为“ input”）。\n第三种选项是“按原样签出，按原样提交”。当签出或提交文本文件时，Git不会执行任何转换。不建议跨平台项目选择此选项（“ core.autocrlf”设置为“ false”）。\n\n\n\n\n\n\n点击Next进入配置Git Bash终端类型页面。默认即可。\n\n\n第一个“使用MinTTY（MSYS2的默认终端）”。Git Bash将使用MinTTY作为终端模拟器，该模拟器具有可调整大小的窗口，非矩形选择和Unicode字体。Windows控制台程序必须通过“ winpty”启动才能在MinTTY中运行。\n第二个选项是“使用Windows的默认控制台窗口”。Git将使用Windows的默认控制台窗口（“cmd.exe”），该窗口可以与Win32控制台程序（如交互式Python或node.js）一起使用，但默认的回滚非常有限，需要配置为使用unicode 字体以正确显示非ASCII字符，并且在Windows 10之前，其窗口不能自由调整大小，并且只允许矩形文本选择。\n\n\n\n\n\n\n点击Next进入选择默认从远程库拉取代码到本地库的行为的页面，默认即可。\n\n\n\n\n\n\n点击Next进入选择凭据管理器页面，默认即可。\n\n\n在第一次push或pull的时候，Git凭据管理器会记录登录的行为，下次就可以免登录了。\n\n\n\n\n\n\n点击Next进入其他配置，默认即可。\n\n\n分别是缓存机制和使用符号连接，默认只勾选第一个。\n\n\n\n\n点击Next进入最后一个页面！！！配置实验室功能。默认即可。\n\n\n测试功能，可能有潜在bug，建议保持默认。\n\n\n\n\n点击Install，等待进度条走完即可。\n\n\n\n\n\n\n\n\n检查是否安装成功。\n\n\n按win+r，在跳出的运行窗口输入cmd，然后点击确定或直接键盘敲击Enter打开命令行窗口。\n\n\n\n\n\n\n\n\n在命令行窗口输入 git –version 然后按Enter，会得到Git的版本号。\n\n\n\n\n至此，Git安装完毕。\n\nNode.js安装\n到Node.js官网下载Node.js安装包。\n\n\n\n\n左边LTS表示长期支持版，右边Current表示最新版，推荐选择LTS，比较稳定。从左到右依次是Windows安装包，macOS安装包和源代码，直接点击即可开始下载。\n下方也可以选择其他版本的详细安装包，推荐直接在绿色区域点击自己的操作系统对应安装包。（.msi是Windows系统的数据库文件，常用于安装包，可直接运行安装，请放心下载。）\n提供node-v16.13.0-x64蓝奏云下载。\n\n\n安装Node.js\n\n\n下载完成后直接双击打开安装包，这里示范node-v16.13.0-x64\n\n\n\n\n\n\n点击Next进入许可协议页，务必选择同意，否则无法安装。\n\n\n\n\n\n\n点击Next进入安装目录选择页面，默认安装在C盘，可以自定义安装在别的地方，这里示范安装在D盘。\n\n\n这一步往后**直接点击Next**即可，默认配置就足够了。\n\n\n\n\n\n\n点击Next进入自定义安装界面，默认即可。\n\n\n分别表示运行环境，npm包管理器，在线文档快捷方式以及添加环境变量。\n\n\n\n\n点击Next进入本地模块工具安装界面，默认即可。\n\n\n因为需要访问外网，所以建议保持默认不勾选。\n但是在使用npm安装一些模块的时候可能会报错，建议安装完成之后再手动安装对应组件。\n\n\n\n\n\n\n点击Next进入确认安装页面。\n\n\n\n\n\n\n点击Install开始安装，等待进度条走完即可。\n\n\n\n\n\n\n\n\n检查是否安装成功。\n\n\n按win+r，在跳出的运行窗口输入cmd，然后点击确定或直接键盘敲击Enter打开命令行窗口。\n\n\n\n\n\n\n\n\n在命令行窗口输入 node -v 然后按Enter，会得到Node.js的版本号；然后继续在命令行窗口输入 npm -v 然后按Enter，会得到npm的版本号。\n\n\n\n\n至此，Node.js安装完毕。\n\nHexo安装\nHexo基于Node.js开发，需要利用Node.js的npm安装工具来安装，因此请务必完成前面的安装。\n\n\n按win+r，在跳出的运行窗口输入cmd，然后点击确定或直接键盘敲击Enter打开命令行窗口。\n\n\n\n\n\n\n\n\n在命令行窗口输入 npm install hexo-cli -g 然后按Enter，等待Hexo安装完毕。\n\n\n若运行完成后无标红的报错和标黄的警告则可认为安装成功。\n\n\n\n\n\n\n存在错误请看此条，安装成功请忽略。\n\n\n —— 若出现错误，可输入如下两行代码，利用淘宝镜像来安装\nnpm install -g cnpm --registry=https://registry.npm.taobao.orgcnpm install hexo-cli -g以后直接用cnpm替换npm即可！如有可选更新，cnpm也可以进行升级。\n\n\n检查是否安装成功，在命令行窗口输入hexo -v然后按Enter，会得到hexo及其工具的版本号。\n\n\n\n\n至此，Hexo安装完毕。\n\nGitHub配置GitHub注册\n从浏览器进入GitHub官网。\n\n\n\n\n\n\n点击右上角Sign up或左侧Sign up for GitHub进入GitHub注册页面。\n\n\n输入你的邮箱** ** ** @ **.com。\n邮箱输入成功之后会让你设置密码。\n设置密码后会让你设置用户名，用户名只能使用字母数字字符和连字符。\n输入之后前面出现绿色的勾才能点击下一步，请牢记用户名和密码。\n\n\n\n\n\n\n设置好用户名之后会询问你是否愿意接收产品更新和公告。需要则输入y后按Continue，否则输入n。\n\n\n\n\n\n\n在跳出的验证中按照指示完成验证，完成后按Create account。\n\n\n\n\n\n\nGitHub会往你输入的邮箱中发送验证码，将接收到的验证码输入框中并按下Enter键即可完成账号创建。\n\n\n\n\n\n\n创建成功后会让你回答一些问题，可根据实际情况选择（非必须）。\n\n\n第一个选择一起工作的人数，选择Just me即可；\n第二个询问是学生还是老师，选择学生即可；\n第三个直接划到最下面选择Community即可。\n\n\n\n\n\n\n\n\n如果选择了学生，会邀请你进行验证领取学生特权（非必须）。\n\n\n\n\n\n\n重新进入GitHub官网，账号会自动登录，若没有则按右上角Sign in输入用户名和密码登录即可。\n\n\n\n\n至此，GitHub账户创建成功。\n\nGitHub仓库搭建\n登录GitHub账户，点击左侧绿色按钮Create repository创建仓库。\n\n\n\n\n若左侧没有显示，可点击右上角头像选择Your repositories；\n\n\n然后点击右侧绿色的按钮New即可进入新建仓库页面。\n\n\n\n在第一行输入仓库名，格式为：用户名.github.io，第二行描述内容选填。\n\n\n一般创建仓库名称可以自定义（不能使用中文字符），由于需要用这个仓库搭建网站，因此必须要设置为 \n用户名.github.io 的格式。\n\n\n\n\n\n\n确保这里选择为Public，然后点击下面Create repository。\n\n\n\n\n\n\n一个空的仓库就已经搭建好了。\n\n\n\n\n\nGitHub连接本地\n生成SSH\n\n\n桌面右击选择Git Bash Here，或者在任意文件夹内右击。（示范为Windows11系统，因此还要再点击最后一行显示更多选项。）\n\n\n\n\n\n\n\n\n在打开的Git窗口中输入代码：\n\nssh-keygen -t rsa -C &quot;邮件地址&quot;\n\n\n其中邮件地址为注册GitHub所用的邮件地址。\n窗口暂停时直接按Enter直到运行结束即可（如图），一共按四次。\n\n\n\n\n\n\n打开此电脑进入C盘，进入用户（user）文件夹，然后点进自己电脑用户名对应的文件夹，这里是15475，默认为Administrator。\n\n\n\n\n\n\n\n\n（能看到.ssh文件夹的忽略这步）因为是隐藏文件夹，所以要右上角点击选择选项，选择查看，选择显示隐藏的文件、文件夹和驱动器。\n\n\n\n\n\n\n\n\n点击进入用户名文件夹中的**.ssh文件夹。找到id_rsa.pub**文件用VScode打开。\n\n\n\n\n\n\n\n\n按Ctrl+a选中全部，然后复制这串字符。\n\n\n\n\n\n\n连接本地\n\n\n进入并登录GitHub官网。点击右上角跳出菜单倒数第二行的Settings。\n\n\n\n\n\n\n点击页面右侧的SSH and GPG keys，然后点击右上角绿色的New SSH key。\n\n\n\n\n\n\nTitle部分可随意写，Key部分则将之前从id_rsa.pub文件里复制出来的一串字符粘贴在这里，然后点击下方绿色的Add SSH key。\n\n\n\n\n\n\n如图则添加完成\n\n\n\n\n\n\n再次在桌面右击打开Git Bash Here，输入:\n\nssh -T git@github.com\n\n\n\n\n\n\n在上图输入yes然后按Enter，只要最终显示这句话即为成功：\n\nHi 你的用户名! You&#x27;ve successfully authenticated, \n\n\n博客创建本地准备\n在任意处新建一个文件夹，这个文件夹就作为本地的博客。在空文件夹空白处右击选择Git Bash Here。\n\n\n\n\n\n\n在打开的窗口输入初始化Hexo的命令：\n\nhexo init\n\n\n由于GitHub服务器在国外，可能会出现连接超时，重试即可。\n当出现Start blogging with Hexo时，说明初始化成功。\n\n\n\n\n\n\n完成后原文件夹会出现如下文件\n\n\n\n_config.yml：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。\nnode_modules:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。\nscaffolds：模板文件夹，里面的post.md文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。\nsource：非常重要。所有的个人文件都在里面！\nthemes：主题文件夹，可以从Hexo主题官网或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端。\n\n\n\n\n\n\n\n继续在Git Bash Here打开的窗口中输入开启本地服务命令：\n\nhexo s\n\n\n开启成功后即可在浏览器输入http://localhost:4000访问博客。\n因端口被占用这里示范使用代码： hexo s -p 2000 将端口换至2000。\n\n\n\n\n打开页面如图，该页面为Hexo的默认主题页面。\n\n\n\n\n\n连接准备\n先安装 hexo-deployer-git 插件，在博客文件夹右击选择Git Bash Here打开的窗口中输入安装命令：\n\nnpm install hexo-deployer-git --save\n\n\n利用这个插件我们可以把生成的public文件夹部署到Github或者其他代码托管平台。\n示范为重复部署，页面并不准确。\n\n\n\n\n\n\n打开GitHub的仓库页面获取自己的仓库地址\n\n\n注意需要的是SSH地址。\n\n\n\n\n\n\n\n\n用VScode打开博客根目录的文件。\n\n\n\n\n\n\n将文件尾部代码：\n\ndeploy:  type:\n\n​        修改为：\ndeploy:  type: git  repo: git@github.com:h-t-m-2/h-t-m-2.github.io.git //替换成自己的地址即可   branch: main\n\n\n\ndeploy: 部署的意思，一个关键词。\ntype：部署的类型，这里选择的是git，就是上面我们已经安装的那个。\nrepo：仓库的意思，我们所有的本地文件都要上传到这里。\nbranch：仓库的分支。\n注意冒号后面有一个空格！\n\n\n\n\n\n\n\n\n连接仓库\n博客文件夹右击点击Git Bash Here打开Git窗口，输入以下两条代码：\n\ngit config --global user.name &quot;h-t-m-2&quot;git config --global user.email h-t-m-223@163.com\n\n\nuser.name 后面输入GitHub的用户名（加上双引号）。\nuser.email 后面输入注册GitHub时用的邮箱。\n\n\n\n\n\n\n\n部署博客\n继续在Git窗口输入以下代码：\n\nhexo cl &amp;&amp; hexo g &amp;&amp; hexo d\n\n\n\nhexo cl是 hexo clean的简写。意思是清除本地的缓存，实际上就是把博客文件夹下的public文件夹删除掉了。这个public是基于本地的文件生成的、用于上传到仓库或者其他网站服务器上的文件夹，可以理解为本地文件上网的中转站、交通工具，删掉了也不影响本地的内容。\nhexo g 是hexo generate的简写，意思是生成public文件夹。\nhexo d是hexo deploy的简写，意思是将生成的public文件夹部署到网上，我们这里是部署到github上面。\n三条命令可分别输入。\n\n\n\n\n\n\n\n回到GitHub仓库页面，本地文件已经上传成功\n\n\n\n\n\n\n在浏览器打开 用户名.github.io，就可以在线访问我们创建的博客了。\n\n\n\n\n\n主题设置\n可以到Hexo官网主题页面找到自己喜欢的主题。\n\n\n\n\n\n\n示范使用keep主题：\n\n\n\n\n\n点击图片可转到预览网页：\n\n\n\n\n点击主题名可转到该主题的GitHub页面：\n\n\n\n\n在GitHub主页往下滑，可以看到官方文档，有主题安装的详细说明：\n\n\n\n\n在本地博客文件夹右击选择Git Bash Here打开Git窗口。\n\n\n\n\n\n\n在Git窗口输入以下代码以将该主题的源文件从GitHub拷贝到博客的themes文件夹中：\n\ngit clone https://github.com/XPoet/hexo-theme-keep themes/keep\n\n\n\n在5.0及以上版本的Hexo中，支持直接输入以下代码安装主题。\n\nnpm install hexo-theme-keep\n\n\n\n\n\n若上述代码无法安装，可直接在主题的GitHub主页把文件拷贝下来。\n\n点击主页Code下的Download ZIP即可直接打包下载（速度慢可自行百度加速）。\n\n下载完成后解压并将文件夹放至本地博客文件夹的themes文件夹中。\n\n\n\n\n\n安装完成后可在本地博客文件夹里看到新增的主题文件夹。\n\n\n\n\n\n\n打开本地博客文件夹的config.yml配置文件。\n\n\n\n\n\n\n将配置文件中的**theme: **后面改为主题的名称。\n\n 注意冒号后面有一个空格且名称应与主题文件夹的名称相同。\n\n\n\n\n\n\n\n\n\n\n在本地博客文件夹右击选择Git Bash Here打开Git窗口。输入以下代码：\n\nhexo g &amp;&amp; hexo d\n\n\n可输入 hexo g &amp;&amp; hexo s 先在本地访问 http://localhost:4000预览之后再输入 hexo d 上传部署。\n\n\n\n\n\n\n然后在浏览器中输入地址（用户名.github.io）即可访问更新主题后的博客。\n\n\n\n\n\n\n主题更新完成，以后可根据官方文档进一步设置来自定义设计博客的样式。\n\n"}]